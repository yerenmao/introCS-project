class Player {
    field int x, y;
    field int ax, ay, aimpt, aimload;
    field int hp;
    field int size;
    field int ticker;
    field boolean firstrender;
    field ListManager listman;
    field Game game;

    constructor Player new(int a, int b, ListManager listmanager, Game g) {
        let x = a; let y = b; let size = 23;
        let listman = listmanager; let game = g;
        let aimpt = 0; let aimload = 8;
        let hp = 22;
        let ticker = 0;
        let firstrender = false;
        do putaim();
        return this;
    }
    method void free() {
        do Memory.deAlloc(this);
        return;
    }

    method void tick() {
        if(~(firstrender)) {
            do renderplayer(true);
            do renderaim(true);
            do renderhpbar(true);
            let firstrender = true;
        }
        if(ticker < 20) {
            let ticker = ticker + 1;
        } else {
            do renderplayer(true);
            if(aimload < 8) {
                let aimload = aimload + 1;
                do renderaim(true);
            }
            let ticker = 0;
        }
        /* hit by enemy bullet */
        if(listman.hitenemybullet(x, y, size)) {
            do losthp(3);
        }
        return;
    }

    method void reset() {
        let x = 255-11; let y = 255-24;
        let aimpt = 0; let aimload = 8;
        let hp = 22;
        do putaim();
        let ticker = 0;
        let firstrender = false;
        return;
    }

    method void move(int d) {
        if((d = 1) & (y > 11)) {                 // w
            do renderplayer(false);
            let y = y - 1;
            do renderplayer(true);
        }
        if((d = 2) & (x > 1)) {                 // a
            do renderplayer(false);
            let x = x - 1;
            do renderplayer(true);
        }
        if((d = 3) & (y+size+1 < 256)) {        // s
            do renderplayer(false);
            let y = y + 1;
            do renderplayer(true);
        }
        if((d = 4) & (x+size+1 < 512)) {        // d
            do renderplayer(false);
            let x = x + 1;
            do renderplayer(true);
        }
        do renderaim(false);
        do putaim();
        do renderaim(true);

        /* hit trap */
        if(listman.hittrap(x, y, size)) {
            do losthp(3);
        }
        return;
    }

    method void losthp(int lhp) {
        do renderplayer(false);
        do renderaim(false);
        do renderhpbar(false);
        let hp = hp - lhp;
        if((hp < 0) | (hp = 0)) {
            do reset();
            do listman.clearall();
            do game.setgamestage(-2);
        } else {
            do renderplayer(true);
            do renderaim(true);
            do renderhpbar(true);
        }
        return;
    }

    method void shoot() {
        if(aimload = 8) {
            do listman.insertbullet(Bullet.new(ax, ay, aimpt, listman));
            let aimload = 0;
        }
        return;
    }

    method void aim(int c) {
        do renderaim(false);
        if(c = 1) {     // pressed j, to left
            if(aimpt = 0) {let aimpt = 7;}
            else {let aimpt = aimpt - 1;}
        } else {        // pressed l, to right
            if(aimpt = 7) {let aimpt = 0;}
            else {let aimpt = aimpt + 1;}
        }
        do putaim();
        do renderaim(true);
        return;
    }
    
    method void putaim() {
        if(aimpt = 0) { let ax = x+11-4;    let ay = y+11-34-4; }
        if(aimpt = 1) { let ax = x+11+24-4; let ay = y+11-24-4; }
        if(aimpt = 2) { let ax = x+11+34-4; let ay = y+11-4; }
        if(aimpt = 3) { let ax = x+11+24-4; let ay = y+11+24-4; }
        if(aimpt = 4) { let ax = x+11-4;    let ay = y+11+34-4; }
        if(aimpt = 5) { let ax = x+11-24-4; let ay = y+11+24-4; }
        if(aimpt = 6) { let ax = x+11-34-4; let ay = y+11-4; }
        if(aimpt = 7) { let ax = x+11-24-4; let ay = y+11-24-4; }
        return;
    }

    method boolean renderaimvalid() {
        if((ax>1) & (ay>1) & (ax+10<512) & (ay+10<256)) {
            return true;
        } else {
            return false;
        }
    }

    method void renderplayer(boolean bool) {
        do renderhpbar(bool);
        do Screen.setColor(bool);
        do Screen.drawRectangle(x+8, y, x+15, y);
        do Screen.drawRectangle(x+7, y+1, x+9, y+1);
        do Screen.drawRectangle(x+14, y+1, x+16, y+1);
        do Screen.drawRectangle(x+6, y+2, x+7, y+2);
        do Screen.drawRectangle(x+16, y+2, x+17, y+2);
        do Screen.drawPixel(x+6, y+3);
        do Screen.drawPixel(x+17, y+3);
        do Screen.drawRectangle(x+5, y+4, x+5, y+6);
        do Screen.drawRectangle(x+18, y+4, x+18, y+6);
        do Screen.drawRectangle(x+7, y+8, x+8, y+9);
        do Screen.drawRectangle(x+12, y+8, x+16, y+10);
        do Screen.drawRectangle(x+13, y+7, x+15, y+7);
        do Screen.drawRectangle(x+13, y+11, x+15, y+11);

        do Screen.drawRectangle(x, y+7, x, y+10);
        do Screen.drawRectangle(x+1, y+6, x+2, y+6);
        do Screen.drawRectangle(x+1, y+10, x+1, y+12);
        do Screen.drawRectangle(x+2, y+12, x+2, y+14);
        do Screen.drawRectangle(x+3, y+7, x+3, y+8);
        do Screen.drawRectangle(x+3, y+14, x+3, y+15);
        do Screen.drawPixel(x+4, y+9);
        do Screen.drawPixel(x+5, y+10);
        do Screen.drawPixel(x+5, y+16);
        do Screen.drawRectangle(x+4, y+15, x+4, y+18);

        do Screen.drawRectangle(x+7, y+13, x+16, y+13);
        do Screen.drawRectangle(x+8, y+14, x+9, y+14);
        do Screen.drawRectangle(x+14, y+14, x+15, y+14);
        do Screen.drawPixel(x+11, y+14);
        do Screen.drawRectangle(x+9, y+16, x+9, y+17);
        do Screen.drawRectangle(x+12, y+15, x+12, y+16);
        do Screen.drawRectangle(x+14, y+16, x+14, y+17);
        do Screen.drawRectangle(x+10, y+18, x+13, y+18);

        do Screen.drawPixel(x+18, y+10);
        do Screen.drawPixel(x+19, y+9);
        do Screen.drawPixel(x+18, y+16);
        do Screen.drawRectangle(x+20, y+7, x+20, y+8);
        do Screen.drawRectangle(x+21, y+6, x+22, y+6);
        do Screen.drawRectangle(x+23, y+7, x+23, y+10);
        do Screen.drawRectangle(x+22, y+10, x+22, y+12);
        do Screen.drawRectangle(x+21, y+12, x+21, y+14);
        do Screen.drawRectangle(x+20, y+14, x+20, y+15);
        do Screen.drawRectangle(x+19, y+15, x+19, y+18);

        do Screen.drawRectangle(x+5, y+23, x+7, y+23);
        do Screen.drawRectangle(x+7, y+22, x+9, y+22);
        do Screen.drawRectangle(x+9, y+23, x+14, y+23);
        do Screen.drawRectangle(x+14, y+22, x+17, y+22);
        do Screen.drawRectangle(x+17, y+23, x+19, y+23);
        return;
    }

    method void renderaim(boolean bool) {
        if(renderaimvalid()) {
            do Screen.setColor(bool);
            if(aimload > 0) 
                {do Screen.drawRectangle(ax+3, ay, ax+6, ay);}
            if(aimload > 1)
                {do Screen.drawPixel(ax+8, ay+2); do Screen.drawRectangle(ax+7, ay+1, ax+8, ay+1);}
            if(aimload > 2)
                {do Screen.drawRectangle(ax+9, ay+3, ax+9, ay+6);}
            if(aimload > 3)
                {do Screen.drawPixel(ax+8, ay+7); do Screen.drawRectangle(ax+7, ay+8, ax+8, ay+8);}
            if(aimload > 4) 
                {do Screen.drawRectangle(ax+3, ay+9, ax+6, ay+9);}
            if(aimload > 5)
                {do Screen.drawPixel(ax+1, ay+7); do Screen.drawRectangle(ax+1, ay+8, ax+2, ay+8);}
            if(aimload > 6) 
                {do Screen.drawRectangle(ax, ay+3, ax, ay+6);}
            if(aimload > 7)
                {do Screen.drawPixel(ax+1, ay+2); do Screen.drawRectangle(ax+1, ay+1, ax+2, ay+1);}
        }
        return;
    }

    method void renderhpbar(boolean bool) {
        do Screen.setColor(bool);
        do Screen.drawRectangle(x, y-9, x+size, y-9);
        do Screen.drawRectangle(x, y-4, x+size, y-4);
        do Screen.drawRectangle(x, y-8, x, y-5);
        do Screen.drawRectangle(x+size, y-8, x+size, y-5);
        do Screen.drawRectangle(x, y-8, x+hp, y-5);
        return;
    }
}