class Game {
	field ListManager listman;
	field Background background;
	field Player player;
	field Event event;
	field int gamestage;

	constructor Game new() {
		do Random.init();
		let listman = ListManager.new();
		let background = Background.new(listman);
		let player = Player.new(255-11, 255-24, listman, this);
		let event = Event.new(player, this);
		let gamestage = 0;			// welcome
		return this;
	}
	method void free() {
		do player.free();
		do event.free();
		do Memory.deAlloc(this);
		return;
	}

	method void run() {
		var char key;
		var boolean running;
		var boolean moved;
		var boolean bgrendered;
		let running = true;
		let bgrendered = false;
		
		while(running) {
			let moved = false;
			let key = Keyboard.keyPressed();
			if(key > 0) {
				/* event */
				let moved = event.handle(key);
				let key = 0;
			}

			if((gamestage = 0) | (gamestage = -1) | (gamestage = -2)) {
				if(~bgrendered) {
					do background.renderwelcome(gamestage);
					let bgrendered = true;
				}
			}
			if(gamestage = 1) {
				let bgrendered = false;
				/* tick */
				do player.tick();
				if(gamestage = 1) {
					do event.tick();
					do listman.tick();

					/* control game speed */
					if(moved) {
						do Sys.wait(1);
					} else {
						do Sys.wait(4);
					}

					/* check won */
					if(listman.allcleared()) {
						do setgamestage(-1);	// victory
					}
				}
			}
		}
		return;
	}

	method int getgamestage() {
		return gamestage;
	}

	method void setgamestage(int gs) {
		let gamestage = gs;
		do Screen.clearScreen();
		do player.reset();
		if(gamestage = 1) {
			do background.startgame1();
		}
		return;
	}
}