class EnemyBullet2 {
    field int x, y, size, d;
    field ListManager listman;
    field EnemyBullet2 prev, next;
    field int life;

    constructor EnemyBullet2 new(int a, int b, int dir, ListManager listmanager) {
        let x = a; let y = b; let d = dir;
        let size = 9;
        let prev = null; let next = null;
        let listman = listmanager;
        let life = 2;
        return this;
    }
    method void free() {
        do render(false);
        do Memory.deAlloc(this);
        return;
    }

    method void tick() {
        do move();
        return;
    }

    method void move() {
        if((y=1) | (x=1) | (y+size+1=256) | (x+size+1=512)) {
            if(life > 0) {
                if((y=1) & (x=1)) {
                    let d = 3;
                } else {if((y=1) & (x+size+1=512)) {
                    let d = 5;
                } else {if((x=1) & (y+size+1=256)) {
                    let d = 1;
                } else {if((x+size+1=512) & (y+size+1=256)) {
                    let d = 7;
                } else {if(y=1) {
                    if(d = 7) {let d = 5;}
                    else {if(d = 0) {let d = 4;}
                    else {if(d = 1) {let d = 3;}}}
                } else {if(x=1) {
                    if(d = 5) {let d = 3;}
                    else {if(d = 6) {let d = 2;}
                    else {if(d = 7) {let d = 1;}}}
                } else {if(y+size+1=256) {
                    if(d = 3) {let d = 1;}
                    else {if(d = 4) {let d = 0;}
                    else {if(d = 5) {let d = 7;}}}
                } else {if(x+size+1=512) {
                    if(d = 1) {let d = 7;}
                    else {if(d = 2) {let d = 6;}
                    else {if(d = 3) {let d = 5;}}}
                }}}}}}}}
                let life = life - 1;
            } else {
                do listman.removeenemybullet2(this);
                do free();
                return;
            }
        }
        do render(false);
        if((d = 0) | (d = 1) | (d = 7)) {let y = y - 1;}
        if((d = 1) | (d = 2) | (d = 3)) {let x = x + 1;}
        if((d = 3) | (d = 4) | (d = 5)) {let y = y + 1;}
        if((d = 5) | (d = 6) | (d = 7)) {let x = x - 1;}
        do render(true);
        return;
    }

    method boolean hitted(int bx, int by, int bs) {
        if(Tools.collide(x, y, size, size, bx, by, bs, bs)) {
            return true;
        }
        return false;
    }

    method void render(boolean bool) {
        do Screen.setColor(bool);
        do Screen.drawRectangle(x+3, y+3, x+6, y+6);
        do Screen.drawRectangle(x+0, y+0, x+0, y+4);
        do Screen.drawRectangle(x+1, y+1, x+1, y+4);
        do Screen.drawRectangle(x+2, y+2, x+2, y+4);
        do Screen.drawRectangle(x+7, y+5, x+7, y+7);
        do Screen.drawRectangle(x+8, y+5, x+8, y+8);
        do Screen.drawRectangle(x+9, y+5, x+9, y+9);
        do Screen.drawRectangle(x+5, y+0, x+7, y+0);
        do Screen.drawRectangle(x+5, y+1, x+8, y+1);
        do Screen.drawRectangle(x+5, y+2, x+9, y+2);
        do Screen.drawRectangle(x+2, y+7, x+4, y+7);
        do Screen.drawRectangle(x+1, y+8, x+4, y+8);
        do Screen.drawRectangle(x+0, y+9, x+4, y+9);
        return;
    }

    method EnemyBullet2 getprev() {return prev;}
    method EnemyBullet2 getnext() {return next;}
    method void setprev(EnemyBullet2 eb2) {let prev = eb2; return;}
    method void setnext(EnemyBullet2 eb2) {let next = eb2; return;}
}